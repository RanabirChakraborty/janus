argument_specs:
    main:
        options:
            upstream_name:
                type: 'str'
                required: yes
                description: "The prefix for roles in the upstream collection to transform"
            downstream_name:
                type: 'str'
                required: yes
                description: "The name of the downstream collection to generate"
            upstream_collection_name:
                type: 'str'
                required: no
                default: "{{ upstream_name }}"
                description: "Optional name of upstream collection"
            project_git_url:
                type: 'str'
                required: no
                description: "If provided, the git url used to fetch the upstream project repository"
            project_git_version:
                type: 'str'
                required: no
                description: "If provided along project_git_url, the branch to fetch the upstream project from"
            upstream_namespace:
                type: 'str'
                default: "middleware_automation"
                description: "Name of the upstream namespace to transform"
            downstream_namespace:
                type: 'str'
                default: "redhat"
                description: "Name of the downstream namespace to generate the collection into"
            workdir:
                type: 'str'
                default: "{{ lookup('env', 'PWD') }}"
                description: "Working directory to run the transformation process onto"
            upstream_projects_dir:
                type: 'str'
                default: "{{ workdir }}/upstream"
                description: "Directory where the upstream project is cloned from git"
            downstream_projects_dir:
                type: 'str'
                default: "{{ workdir }}/downstream"
                description: "Directory where the downstream collection will be generated"
            skip_setup:
                type: 'bool'
                default: True
                description: "Whether to skip the pre-transformation setup phase"
            post_processors_replacements:
                type: 'list'
                default: []
                description: "List of { match, replace, file } dicts for post processing replacements. `match` and `replace` are regexes for string replacements while `file` is a regex matcher filtering filenames to post-process"
            upstream_downstream_collections_map:
                type: 'list'
                default: ""
                description: "List of dependency mappings {upstream_name, downstream_name} for renaming in tasks, galaxy.yml and requirements.yml"
